
# 📈 Trading Strategies Collection – Python Notebooks

This repository features a collection of algorithmic trading strategies implemented in Python using historical financial market data. The strategies cover intraday and swing approaches and are ideal for retail quants, algorithmic traders, and students exploring systematic trading.

---

## 📁 Included Notebooks

### 1. 🌀 Parabolic SAR Strategy
**Notebook**: `Parabolic Sar - Trading Strategy.ipynb`  
**Summary**: Executive Summary: Parabolic SAR Trading Strategy Analysis  
- Uses the **Parabolic Stop and Reverse (SAR)** technical indicator.
- Identifies potential reversal points in trending markets.
- Demonstrates strategy performance using backtesting on price data.

---

### 2. 📊 Dual Thrust Strategy
**Notebook**: `Dual Thrust- Trading Strategy.ipynb`  
**Summary**: Implementing Day trading Strategies using 5 min BTC-USD data  
- Implements the **Dual Thrust breakout strategy** on cryptocurrency data.
- Uses high/low/open/close from historical data to define breakout levels.
- Backtests strategy with volatility-based thresholds.

---

### 3. 🔁 Swing Trading Strategy
**Notebook**: `Swing Trading- Trading Strategy.ipynb`  
**Summary**: Executive Summary: Swing Trading Strategy Analysis  
- Focuses on **capturing medium-term price swings**.
- Combines trend indicators and signal filters.
- Suitable for holding positions over multiple days.

---

## 🧠 Techniques & Libraries Used

- `pandas`, `numpy` for data manipulation  
- `matplotlib`, `plotly` for visualization  
- `ta` and custom logic for technical indicators  
- Manual backtesting framework with PnL calculations

---

## 🚀 How to Run

1. Open each notebook in Jupyter or Colab.
2. Install necessary libraries if not already present.
3. Run all cells to visualize indicator behavior and backtesting results.

---

## 👨‍💻 Author
Prepared by: Sudhansh Chopda  
Use for educational and research purposes. Contributions are welcome!

